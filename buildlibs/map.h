/*
 * This file was automatically generated by create-native-map from Fuse.NET.dll.
 *
 * DO NOT MODIFY.
 */

#ifndef INC_Fuse_NET_buildlibs_map_H
#define INC_Fuse_NET_buildlibs_map_H

#include <glib.h>

G_BEGIN_DECLS

/*
 * Public Macros
 */

/*
 * Public Includes
 */

/*
 * Enumerations
 */

/*
 * Managed Structure Declarations
 */

struct Fuse_NET_Args;
struct Fuse_NET_FileSystemOperationContext;
struct Fuse_NET_OpenedPathInfo;
struct Fuse_NET_Operations;

/*
 * Inferred Structure Declarations
 */

struct fuse_args;

/*
 * Delegate Declarations
 */

typedef int (*AccessPathCb) (const char* path, int mode);
typedef int (*ChangePathOwnerCb) (const char* path, gint64 owner, gint64 group);
typedef int (*ChangePathPermissionsCb) (const char* path, unsigned int mode);
typedef int (*ChangePathTimesCb) (const char* path, void* buf);
typedef int (*CreateDirectoryCb) (const char* path, unsigned int mode);
typedef int (*CreateHandleCb) (const char* path, unsigned int mode, void* info);
typedef int (*CreateHardLinkCb) (const char* oldpath, const char* newpath);
typedef int (*CreateSpecialFileCb) (const char* path, unsigned int perms, guint64 dev);
typedef int (*CreateSymbolicLinkCb) (const char* oldpath, const char* newpath);
typedef void (*DestroyCb) (void* conn);
typedef int (*FlushHandleCb) (const char* path, void* info);
typedef int (*GetFileSystemStatusCb) (const char* path, void* buf);
typedef int (*GetHandleStatusCb) (const char* path, void* buf, void* info);
typedef int (*GetPathExtendedAttributeCb) (const char* path, const char* name, unsigned char* value, guint64 size, int* bytesWritten);
typedef int (*GetPathStatusCb) (const char* path, void* stat);
typedef void* (*InitCb) (void* conn);
typedef int (*ListPathExtendedAttributesCb) (const char* path, unsigned char* list, guint64 size, int* bytesWritten);
typedef int (*LockHandleCb) (const char* path, void* info, int cmd, void* flockp);
typedef int (*MapPathLogicalToPhysicalIndexCb) (const char* path, guint64 logical, guint64* physical);
typedef int (*OpenDirectoryCb) (const char* path, void* info);
typedef int (*OpenHandleCb) (const char* path, void* info);
typedef int (*ReadDirectoryCb) (const char* path, void* buf, void* filler, gint64 offset, void* info, void* stbuf);
typedef int (*ReadHandleCb) (const char* path, void* buf, guint64 size, gint64 offset, void* info, int* bytesRead);
typedef int (*ReadSymbolicLinkCb) (const char* path, void* buf, guint64 bufsize);
typedef int (*ReleaseDirectoryCb) (const char* path, void* info);
typedef int (*ReleaseHandleCb) (const char* path, void* info);
typedef int (*RemoveDirectoryCb) (const char* path);
typedef int (*RemoveFileCb) (const char* path);
typedef int (*RemovePathExtendedAttributeCb) (const char* path, const char* name);
typedef int (*RenamePathCb) (const char* oldpath, const char* newpath);
typedef int (*SetPathExtendedAttributeCb) (const char* path, const char* name, unsigned char* value, guint64 size, int flags);
typedef int (*SynchronizeDirectoryCb) (const char* path, int onlyUserData, void* info);
typedef int (*SynchronizeHandleCb) (const char* path, int onlyUserData, void* info);
typedef int (*TruncateFileb) (const char* path, gint64 length);
typedef int (*TruncateHandleCb) (const char* path, gint64 length, void* info);
typedef int (*WriteHandleCb) (const char* path, unsigned char* buf, guint64 size, gint64 offset, void* info, int* bytesWritten);

/*
 * Structures
 */

struct Fuse_NET_Args {
	int   argc;
	void* argv;
	int   allocated;
};

int
Fuse_NET_FromArgs (struct Fuse_NET_Args* from, struct fuse_args *to);
int
Fuse_NET_ToArgs (struct fuse_args *from, struct Fuse_NET_Args* to);


struct Fuse_NET_FileSystemOperationContext {
	void*  fuse;
	gint64 userId;     /* uid_t */
	gint64 groupId;    /* gid_t */
	int    processId;  /* pid_t */
};

struct Fuse_NET_OpenedPathInfo {
	int     flags;
	int     write_page;
	int     direct_io;
	int     keep_cache;
	guint64 file_handle;
};

struct Fuse_NET_Operations {
	GetPathStatusCb                 getattr;
	ReadSymbolicLinkCb              readlink;
	CreateSpecialFileCb             mknod;
	CreateDirectoryCb               mkdir;
	RemoveFileCb                    unlink;
	RemoveDirectoryCb               rmdir;
	CreateSymbolicLinkCb            symlink;
	RenamePathCb                    rename;
	CreateHardLinkCb                link;
	ChangePathPermissionsCb         chmod;
	ChangePathOwnerCb               chown;
	TruncateFileb                   truncate;
	ChangePathTimesCb               utime;
	OpenHandleCb                    open;
	ReadHandleCb                    read;
	WriteHandleCb                   write;
	GetFileSystemStatusCb           statfs;
	FlushHandleCb                   flush;
	ReleaseHandleCb                 release;
	SynchronizeHandleCb             fsync;
	SetPathExtendedAttributeCb      setxattr;
	GetPathExtendedAttributeCb      getxattr;
	ListPathExtendedAttributesCb    listxattr;
	RemovePathExtendedAttributeCb   removexattr;
	OpenDirectoryCb                 opendir;
	ReadDirectoryCb                 readdir;
	ReleaseDirectoryCb              releasedir;
	SynchronizeDirectoryCb          fsyncdir;
	InitCb                          init;
	DestroyCb                       destroy;
	AccessPathCb                    access;
	CreateHandleCb                  create;
	TruncateHandleCb                ftruncate;
	GetHandleStatusCb               fgetattr;
	LockHandleCb                    lock;
	MapPathLogicalToPhysicalIndexCb bmap;
};


/*
 * Functions
 */
int Fuse_NET_FromOpenedPathInfo (struct Fuse_NET_OpenedPathInfo* source, void* dest);
int Fuse_NET_ToOpenedPathInfo (void* source, struct Fuse_NET_OpenedPathInfo* dest);
void mfh_fuse_exit (void* fusep);
int mfh_fuse_get_context (struct Fuse_NET_FileSystemOperationContext* context);
int mfh_fuse_main (int argc, void* argv, void* op);
int mfh_invoke_filler (void* filler, void* buf, const char* path, void* stbuf, gint64 offset);
void mfh_show_fuse_help (const char* appname);

G_END_DECLS

#endif /* ndef INC_Mono_Posix_buildlibs/map_H */

